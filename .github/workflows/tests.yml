on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

name: tests
env:
  GO111MODULE: on

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.x, 1.15.x]
        platform: [ubuntu-latest]
        include:
          # include windows, but only with the latest Go version, since there
          # is very little in the library that is platform specific
          - go-version: 1.x
            platform: windows-latest

          # only update test coverage stats with the most recent go version on linux
          - go-version: 1.x
            platform: ubuntu-latest
            update-coverage: true
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Cancel previous
      uses: styfle/cancel-workflow-action@a40b8845c0683271d9f53dfcb887a7e181d3918b #0.9.1
      with:
        access_token: ${{ github.token }}

    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v2

    # Get values for cache paths to be used in later steps 
    - id: cache-paths
      run: |
        echo "::set-output name=go-cache::$(go env GOCACHE)"
        echo "::set-output name=go-mod-cache::$(go env GOMODCACHE)"
    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.cache-paths.outputs.go-cache }}
          ${{ steps.cache-paths.outputs.go-mod-cache }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    - name: Ensure go generate produces a zero diff
      shell: bash
      run: go generate -x ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code)

    - name: Run go test
      run: go test -v -race -coverprofile coverage.txt -covermode atomic ./...

    - name: Ensure integration tests build
      # don't actually run tests since they hit live GitHub API
      run: go test -v -tags=integration -run=^$ ./test/integration
